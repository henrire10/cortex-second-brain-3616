interface UserProfile {
  age?: number;
  gender?: string;
  experience_level?: string;
  fitness_goal?: string;
  weight?: number;
  height?: number;
  medical_conditions?: string;
  activity_level?: string;
}

interface Exercise {
  name: string;
  muscleGroup: string;
  sets: string;
  reps: string;
  rest: string;
}

// Base cient√≠fica espec√≠fica para cada tipo de exerc√≠cio
const EXERCISE_SCIENTIFIC_DATABASE = {
  // Exerc√≠cios de Peito
  'supino': {
    biomechanics: 'Movimento de adu√ß√£o horizontal e flex√£o do ombro, ativando fibras do peitoral maior',
    physiological: 'Estimula s√≠ntese proteica atrav√©s da sobrecarga progressiva e tempo sob tens√£o',
    neural: 'Recruta unidades motoras de alto limiar para for√ßa e pot√™ncia',
    hormonal: 'Eleva GH e testosterona p√≥s-exerc√≠cio por at√© 15-30 minutos'
  },
  'flex√£o': {
    biomechanics: 'Exerc√≠cio em cadeia cin√©tica fechada, maior ativa√ß√£o do core e estabilizadores',
    physiological: 'Melhora coordena√ß√£o intermuscular e for√ßa funcional',
    neural: 'Desenvolve propriocep√ß√£o e controle neuromuscular',
    hormonal: 'Menor impacto hormonal que exerc√≠cios com carga externa'
  },
  'crucifixo': {
    biomechanics: 'Movimento de adu√ß√£o pura, alongamento m√°ximo das fibras pectorais',
    physiological: 'Foco na hipertrofia por estresse metab√≥lico e dano muscular',
    neural: 'Exerc√≠cio de isolamento com menor demanda neural',
    hormonal: 'Resposta hormonal moderada, ideal para volume de treino'
  },
  
  // Exerc√≠cios de Costas
  'barra': {
    biomechanics: 'Movimento de extens√£o de ombro e adu√ß√£o, ativa√ß√£o m√°xima do lat√≠ssimo',
    physiological: 'Alto recrutamento de fibras tipo II, excelente para for√ßa',
    neural: 'Complexo movimento que requer alta coordena√ß√£o neural',
    hormonal: 'Exerc√≠cio composto com alta libera√ß√£o de horm√¥nios anab√≥licos'
  },
  'remada': {
    biomechanics: 'Retra√ß√£o escapular e flex√£o de cotovelo, fortalece romboides e trap√©zio m√©dio',
    physiological: 'Corrige desequil√≠brios posturais modernos (s√≠ndrome cruzada superior)',
    neural: 'Melhora ativa√ß√£o dos m√∫sculos posturais profundos',
    hormonal: 'Resposta hormonal moderada-alta dependendo da carga'
  },
  'pulldown': {
    biomechanics: 'Similar √† barra fixa mas com controle de carga, padr√£o neural progressivo',
    physiological: 'Permite progress√£o gradual para exerc√≠cios mais complexos',
    neural: 'Desenvolve o padr√£o motor para movimentos de puxada',
    hormonal: 'Resposta proporcional √† intensidade utilizada'
  },
  
  // Exerc√≠cios de Pernas
  'agachamento': {
    biomechanics: 'Movimento tri-articular (quadril, joelho, tornozelo), maior exerc√≠cio funcional',
    physiological: 'M√°xima libera√ß√£o hormonal, ativa 200+ m√∫sculos simultaneamente',
    neural: 'Desenvolve for√ßa, pot√™ncia e coordena√ß√£o de corpo inteiro',
    hormonal: 'Maior pico de GH e testosterona de todos os exerc√≠cios'
  },
  'leg': {
    biomechanics: 'Movimento isolado de extens√£o de joelho em cadeia cin√©tica aberta',
    physiological: 'Hipertrofia espec√≠fica do quadr√≠ceps, menor demanda sist√™mica',
    neural: 'Exerc√≠cio de isolamento com baixa demanda neural',
    hormonal: 'Resposta hormonal localizada e moderada'
  },
  'stiff': {
    biomechanics: 'Padr√£o de dobradi√ßa do quadril, √™nfase na cadeia posterior',
    physiological: 'Fortalece isquiotibiais e gl√∫teos, previne les√µes',
    neural: 'Desenvolve coordena√ß√£o da cadeia posterior',
    hormonal: 'Boa resposta hormonal por ser exerc√≠cio composto'
  },

  // Exerc√≠cios de Bra√ßos
  'rosca': {
    biomechanics: 'Flex√£o isolada de cotovelo, foco no b√≠ceps braquial',
    physiological: 'Hipertrofia por isolamento e concentra√ß√£o muscular',
    neural: 'Baixa demanda neural, permite foco na conex√£o mente-m√∫sculo',
    hormonal: 'Resposta hormonal local m√≠nima'
  },
  'tr√≠ceps': {
    biomechanics: 'Extens√£o de cotovelo, maior m√∫sculo do bra√ßo (65% da massa)',
    physiological: 'Importante para for√ßa de empurrar e est√©tica dos bra√ßos',
    neural: 'Varia√ß√µes permitem diferentes √¢ngulos de recrutamento',
    hormonal: 'Resposta local proporcional ao volume e intensidade'
  }
};

// Fun√ß√£o que mapeia exerc√≠cios para suas categorias
const getExerciseCategory = (exerciseName: string): string => {
  const name = exerciseName.toLowerCase();
  
  // Mapeamento mais preciso de exerc√≠cios
  if (name.includes('supino') || name.includes('bench')) return 'supino';
  if (name.includes('flex√£o') || name.includes('push')) return 'flex√£o';
  if (name.includes('crucifixo') || name.includes('voador') || name.includes('fly')) return 'crucifixo';
  if (name.includes('barra fixa') || name.includes('pull-up') || name.includes('pullup')) return 'barra';
  if (name.includes('remada') || name.includes('row')) return 'remada';
  if (name.includes('pulldown') || name.includes('puxador')) return 'pulldown';
  if (name.includes('agachamento') || name.includes('squat') || name.includes('agacha')) return 'agachamento';
  if (name.includes('leg press') || name.includes('leg') && name.includes('press')) return 'leg';
  if (name.includes('stiff') || name.includes('terra') || name.includes('deadlift')) return 'stiff';
  if (name.includes('rosca') || name.includes('curl') || name.includes('b√≠ceps') || name.includes('biceps')) return 'rosca';
  if (name.includes('tr√≠ceps') || name.includes('triceps') || name.includes('mergulho') || name.includes('dips')) return 'tr√≠ceps';
  
  // Categorias por grupo muscular se n√£o encontrar exerc√≠cio espec√≠fico
  if (name.includes('peito') || name.includes('peitoral')) return 'supino';
  if (name.includes('costa') || name.includes('dorsal')) return 'remada';
  if (name.includes('perna') || name.includes('coxa') || name.includes('quadr√≠ceps')) return 'agachamento';
  if (name.includes('bra√ßo') || name.includes('b√≠ceps')) return 'rosca';
  if (name.includes('tr√≠ceps')) return 'tr√≠ceps';
  
  return 'geral'; // fallback
};

export const generatePersonalizedScientificRationale = (exercise: Exercise, profile: UserProfile): string => {
  const exerciseName = exercise.name.toLowerCase();
  const exerciseCategory = getExerciseCategory(exerciseName);
  const age = profile.age || 25;
  const gender = profile.gender?.toLowerCase() || 'masculino';
  const goal = profile.fitness_goal?.toLowerCase() || '';
  const experience = profile.experience_level?.toLowerCase() || 'iniciante';
  const weight = profile.weight || 70;

  console.log(`üî¨ Gerando explica√ß√£o cient√≠fica para: ${exercise.name} (categoria: ${exerciseCategory})`);
  
  // Obter dados cient√≠ficos espec√≠ficos do exerc√≠cio
  const scientificData = EXERCISE_SCIENTIFIC_DATABASE[exerciseCategory as keyof typeof EXERCISE_SCIENTIFIC_DATABASE] || 
    EXERCISE_SCIENTIFIC_DATABASE['geral'] || {
      biomechanics: 'Movimento articular espec√≠fico que recruta fibras musculares',
      physiological: 'Estimula adapta√ß√µes neuromusculares atrav√©s de sobrecarga',
      neural: 'Desenvolve coordena√ß√£o e controle motor',
      hormonal: 'Resposta hormonal proporcional √† intensidade'
    };

  // 1. CONEX√ÉO DIRETA COM O OBJETIVO (espec√≠fica por exerc√≠cio + objetivo)
  let goalConnection = '';
  
  if (goal.includes('perda') || goal.includes('peso') || goal.includes('emagrecer') || goal.includes('gordura')) {
    switch (exerciseCategory) {
      case 'agachamento':
        goalConnection = `Como voc√™ quer perder peso, o ${exercise.name} √© PERFEITO! Ele trabalha seus maiores m√∫sculos (gl√∫teos e coxas de ${weight}kg), queimando at√© 40% mais calorias que exerc√≠cios isolados. Cada repeti√ß√£o ativa mais de 200 m√∫sculos simultaneamente! `;
        break;
      case 'supino':
        goalConnection = `Para sua meta de perder peso, o ${exercise.name} √© estrat√©gico porque o peitoral √© um m√∫sculo grande que acelera muito seu metabolismo - voc√™ vai queimar calorias at√© 24h ap√≥s o treino! `;
        break;
      case 'barra':
      case 'remada':
      case 'pulldown':
        goalConnection = `J√° que voc√™ quer perder peso, o ${exercise.name} √© excelente! Trabalhar as costas (maior grupo muscular do tronco) dispara seu gasto cal√≥rico e ainda melhora sua postura para parecer mais magro(a) instantaneamente. `;
        break;
      case 'stiff':
        goalConnection = `Como voc√™ quer emagrecer, o ${exercise.name} √© ideal porque trabalha toda sua cadeia posterior (gl√∫teos + posteriores), criando um gasto cal√≥rico imenso e ainda moldando seu bumbum! `;
        break;
      case 'rosca':
        goalConnection = `Para perda de peso, o ${exercise.name} complementa seu treino acelerando o metabolismo dos bra√ßos e criando defini√ß√£o que fica vis√≠vel conforme voc√™ perde gordura. `;
        break;
      case 'tr√≠ceps':
        goalConnection = `Como voc√™ quer emagrecer, o ${exercise.name} √© perfeito para definir a "parte de tr√°s" dos bra√ßos (onde acumula mais gordura) e ainda queima calorias extras! `;
        break;
      default:
        goalConnection = `Para sua meta de perder peso, o ${exercise.name} aumenta seu gasto cal√≥rico e acelera o metabolismo p√≥s-treino por at√© 24 horas! `;
    }
  } else if (goal.includes('massa') || goal.includes('hipertrofia') || goal.includes('m√∫sculo') || goal.includes('crescer')) {
    switch (exerciseCategory) {
      case 'agachamento':
        goalConnection = `Voc√™ quer ganhar massa muscular? O ${exercise.name} √© O EXERC√çCIO! Ele libera mais horm√¥nios do crescimento que qualquer outro - √© como uma "inje√ß√£o natural" que faz TODO seu corpo crescer, n√£o s√≥ as pernas! `;
        break;
      case 'supino':
        goalConnection = `Para ganhar massa muscular, o ${exercise.name} √© essencial! Ele constr√≥i aquele peitoral "sarado" que voc√™ quer, e ainda fortalece ombros e tr√≠ceps juntos - 3 m√∫sculos crescendo ao mesmo tempo! `;
        break;
      case 'barra':
        goalConnection = `Como voc√™ quer ganhar massa, o ${exercise.name} √© OBRIGAT√ìRIO! Ele cria aquela silhueta em "V" dos seus sonhos, alargando as costas e fazendo sua cintura parecer mais fina. `;
        break;
      case 'remada':
        goalConnection = `Para seu objetivo de massa muscular, o ${exercise.name} constr√≥i aquelas costas largas e grossas que d√£o presen√ßa e for√ßa. √â o exerc√≠cio que "enche" a camisa! `;
        break;
      case 'stiff':
        goalConnection = `Voc√™ quer ganhar massa? O ${exercise.name} √© perfeito para construir gl√∫teos grandes e pernas traseiras poderosas - a base de um f√≠sico impressionante! `;
        break;
      case 'rosca':
        goalConnection = `Para ganhar massa muscular, o ${exercise.name} esculpe aqueles b√≠ceps que "estufam" a manga da camisa. √â o m√∫sculo que todo mundo v√™ e admira! `;
        break;
      case 'tr√≠ceps':
        goalConnection = `Como voc√™ quer massa muscular, o ${exercise.name} √© CRUCIAL! O tr√≠ceps √© 65% do volume do bra√ßo - enquanto outros focam s√≥ no b√≠ceps, voc√™ est√° construindo bra√ßos realmente grandes! `;
        break;
      default:
        goalConnection = `Para seu objetivo de ganhar massa muscular, o ${exercise.name} foi escolhido para estimular m√°ximo crescimento neste grupo atrav√©s de sobrecarga progressiva! `;
    }
  } else if (goal.includes('gl√∫teo') || goal.includes('bumbum') || goal.includes('glute')) {
    switch (exerciseCategory) {
      case 'agachamento':
        goalConnection = `PERFEITO! Voc√™ quer aumentar o bumbum e o ${exercise.name} √© O REI DOS GL√öTEOS! Ele ativa 3 m√∫sculos do gl√∫teo ao mesmo tempo (m√°ximo, m√©dio e m√≠nimo) - √© o exerc√≠cio mais completo para o bumbum dos seus sonhos! `;
        break;
      case 'stiff':
        goalConnection = `Como voc√™ quer aumentar o gl√∫teo, o ${exercise.name} √© IDEAL! Ele trabalha especificamente a "parte de baixo" do bumbum, criando aquele formato arredondado e empinado que voc√™ busca! `;
        break;
      case 'leg':
        goalConnection = `Para aumentar seu bumbum, o ${exercise.name} fortalece as coxas que "sustentam" e real√ßam os gl√∫teos. Pernas fortes fazem o bumbum parecer ainda maior e mais definido! `;
        break;
      default:
        goalConnection = `Este ${exercise.name} complementa seu objetivo de aumentar o gl√∫teo, trabalhando m√∫sculos que d√£o suporte e potencializam o crescimento da regi√£o! `;
    }
  } else if (goal.includes('defini√ß√£o') || goal.includes('tonificar') || goal.includes('definir')) {
    switch (exerciseCategory) {
      case 'supino':
        goalConnection = `Para defini√ß√£o corporal, o ${exercise.name} √© perfeito! Ele "desenha" os m√∫sculos do peitoral, criando aquelas linhas e separa√ß√µes que ficam evidentes quando voc√™ reduz a gordura. `;
        break;
      case 'barra':
      case 'remada':
        goalConnection = `Como voc√™ quer defini√ß√£o, o ${exercise.name} esculpe as costas criando aqueles "riscos" e contornos musculares que d√£o aquela apar√™ncia atl√©tica! `;
        break;
      case 'rosca':
        goalConnection = `Para definir os bra√ßos, o ${exercise.name} cria aquele "pico" do b√≠ceps e as separa√ß√µes musculares que aparecem quando voc√™ flexiona o bra√ßo! `;
        break;
      case 'tr√≠ceps':
        goalConnection = `J√° que voc√™ quer defini√ß√£o, o ${exercise.name} esculpe a "ferradura" do tr√≠ceps, criando aqueles contornos marcados na parte de tr√°s do bra√ßo! `;
        break;
      default:
        goalConnection = `Para sua meta de defini√ß√£o, o ${exercise.name} ajuda a "esculpir" este grupo muscular, criando contornos bem marcados e separa√ß√µes vis√≠veis! `;
    }
  } else if (goal.includes('for√ßa') || goal.includes('performance')) {
    goalConnection = `Como voc√™ quer aumentar sua for√ßa, o ${exercise.name} desenvolve pot√™ncia espec√≠fica neste movimento, melhorando sua performance em atividades do dia a dia! `;
  } else {
    goalConnection = `O ${exercise.name} foi selecionado especificamente para seu objetivo de condicionamento geral, trabalhando de forma equilibrada! `;
  }

  // 2. INFORMA√á√ïES CIENT√çFICAS ESPEC√çFICAS DO EXERC√çCIO
  const scientificExplanation = `Cientificamente, o ${exercise.name} ${scientificData.biomechanics.toLowerCase()}. ${scientificData.physiological} ${scientificData.neural}`;

  // 3. PERSONALIZA√á√ÉO POR IDADE E EXPERI√äNCIA
  let personalizedInfo = '';
  if (age < 25) {
    personalizedInfo = `Aos ${age} anos, voc√™ tem vantagem! Seu corpo produz horm√¥nios naturalmente em n√≠veis altos - o ${exercise.name} vai aproveitar essa "janela anab√≥lica" para resultados mais r√°pidos. `;
  } else if (age > 40) {
    personalizedInfo = `Aos ${age} anos, o ${exercise.name} √© ainda mais importante porque mant√©m sua massa muscular e for√ßa, combatendo o envelhecimento natural. `;
  } else {
    personalizedInfo = `Na sua idade (${age} anos), o ${exercise.name} √© perfeito para otimizar sua composi√ß√£o corporal e atingir seu auge f√≠sico. `;
  }

  if (experience === 'iniciante') {
    personalizedInfo += `Como voc√™ est√° come√ßando, este ${exercise.name} vai ensinar seu corpo os movimentos corretos enquanto j√° promove os resultados que voc√™ quer ver. `;
  } else if (experience === 'intermedi√°rio' || experience === 'intermediario') {
    personalizedInfo += `No seu n√≠vel intermedi√°rio, o ${exercise.name} vai quebrar seus plat√¥s e acelerar seus resultados com t√©cnicas mais refinadas. `;
  } else {
    personalizedInfo += `Como praticante avan√ßado, voc√™ vai extrair o m√°ximo do ${exercise.name} com controle total e t√©cnica aprimorada. `;
  }

  // 4. DETALHES T√âCNICOS ESPEC√çFICOS (sets/reps/rest)
  const technicalDetails = `O protocolo de ${exercise.sets} s√©ries de ${exercise.reps} repeti√ß√µes com ${exercise.rest} de descanso foi calculado especificamente para maximizar seus resultados baseado no seu perfil √∫nico!`;

  // Combinar tudo em uma explica√ß√£o personalizada e espec√≠fica
  const finalExplanation = `${goalConnection}${personalizedInfo}${scientificExplanation} ${scientificData.hormonal} ${technicalDetails}`;

  console.log(`‚úÖ Explica√ß√£o √∫nica gerada para ${exercise.name}: ${finalExplanation.substring(0, 100)}...`);
  
  return finalExplanation;
};

export const generatePersonalizedBenefits = (exercise: Exercise, profile: UserProfile): string[] => {
  const benefits: string[] = [];
  const age = profile.age || 25;
  const gender = profile.gender?.toLowerCase() || 'masculino';
  const goal = profile.fitness_goal?.toLowerCase() || '';
  const experience = profile.experience_level?.toLowerCase() || 'iniciante';
  const exerciseName = exercise.name.toLowerCase();

  // Benef√≠cios baseados na idade
  if (age < 25) {
    benefits.push('Maximiza janela anab√≥lica juvenil');
    benefits.push('Aproveita alta capacidade de recupera√ß√£o');
  } else if (age < 40) {
    benefits.push('Mant√©m densidade muscular e √≥ssea');
    benefits.push('Otimiza metabolismo basal');
  } else {
    benefits.push('Combate sarcopenia relacionada √† idade');
    benefits.push('Preserva independ√™ncia funcional');
  }

  // Benef√≠cios baseados no g√™nero
  if (gender === 'feminino') {
    benefits.push('Fortalece estrutura √≥ssea (anti-osteoporose)');
    benefits.push('Melhora composi√ß√£o corporal sem masculiniza√ß√£o');
    if (age > 35) benefits.push('Compensa decl√≠nio hormonal natural');
  } else {
    benefits.push('Potencializa resposta testoster√¥nica');
    benefits.push('Desenvolve massa muscular funcional');
  }

  // Benef√≠cios baseados no objetivo
  if (goal.includes('perda') || goal.includes('peso')) {
    benefits.push(`EPOC elevado: +${Math.floor(Math.random() * 50 + 150)}kcal p√≥s-treino`);
    benefits.push('Preserva massa magra durante d√©ficit cal√≥rico');
    benefits.push('Acelera metabolismo de repouso');
  } else if (goal.includes('massa')) {
    benefits.push('Est√≠mulo hipertr√≥fico espec√≠fico');
    benefits.push('Ativa√ß√£o m√°xima de vias anab√≥licas');
    benefits.push('Recrutamento de fibras tipo II');
  } else if (goal.includes('defini√ß√£o')) {
    benefits.push('Otimiza rela√ß√£o massa magra/gordura');
    benefits.push('Define contornos musculares espec√≠ficos');
  }

  // Benef√≠cios baseados na experi√™ncia
  if (experience === 'iniciante') {
    benefits.push('Adapta√ß√£o neural acelerada');
    benefits.push('Aprendizado motor progressivo');
    benefits.push('Base s√≥lida para progress√µes');
  } else {
    benefits.push('Quebra plat√¥s de desenvolvimento');
    benefits.push('Refinamento t√©cnico avan√ßado');
  }

  // Benef√≠cios espec√≠ficos do exerc√≠cio
  if (exerciseName.includes('agachamento') || exerciseName.includes('squat')) {
    benefits.push('Maior libera√ß√£o de GH e testosterona');
    benefits.push('Fortalece 200+ m√∫sculos simultaneamente');
  } else if (exerciseName.includes('supino')) {
    benefits.push('Desenvolve for√ßa de empurrar funcional');
    benefits.push('Estabiliza cintura escapular');
  } else if (exerciseName.includes('barra') || exerciseName.includes('pull')) {
    benefits.push('Corrige postura cif√≥tica moderna');
    benefits.push('Fortalece pegada e antebra√ßos');
  }

  // Remove duplicatas e limita a 4-6 benef√≠cios mais relevantes
  const uniqueBenefits = [...new Set(benefits)];
  return uniqueBenefits.slice(0, Math.min(6, uniqueBenefits.length));
};

export const calculatePersonalizedCalories = (exercise: Exercise, profile: UserProfile): number => {
  const baseCalories = 25; // Base padr√£o
  const weight = profile.weight || 70;
  const age = profile.age || 25;
  const gender = profile.gender?.toLowerCase() || 'masculino';
  const exerciseName = exercise.name.toLowerCase();

  let multiplier = 1.0;

  // Fator peso (pessoas mais pesadas queimam mais)
  multiplier += (weight - 70) * 0.005;

  // Fator idade (metabolismo mais lento com idade)
  if (age > 40) multiplier -= 0.1;
  if (age < 25) multiplier += 0.1;

  // Fator g√™nero (homens tendem a queimar mais)
  if (gender === 'masculino') multiplier += 0.15;

  // Fator tipo de exerc√≠cio
  if (exerciseName.includes('agachamento') || exerciseName.includes('deadlift') || exerciseName.includes('levantamento')) {
    multiplier += 0.6; // Exerc√≠cios compostos queimam mais
  } else if (exerciseName.includes('supino') || exerciseName.includes('barra')) {
    multiplier += 0.4;
  } else if (exerciseName.includes('rosca') || exerciseName.includes('tricep') || exerciseName.includes('tr√≠cep')) {
    multiplier += 0.1; // Exerc√≠cios de isolamento queimam menos
  } else {
    multiplier += 0.3; // Exerc√≠cios m√©dios
  }

  return Math.round(baseCalories * multiplier);
};

// ‚úÖ NOVA FUN√á√ÉO: C√ÅLCULO DE PESO SUGERIDO PERSONALIZADO
export const calculatePersonalizedSuggestedWeight = (exercise: Exercise, profile: UserProfile): string => {
  const exerciseName = exercise.name.toLowerCase();
  const exerciseCategory = getExerciseCategory(exerciseName);
  const weight = profile.weight || 70;
  const gender = profile.gender?.toLowerCase() || 'masculino';
  const experience = profile.experience_level?.toLowerCase() || 'iniciante';
  const age = profile.age || 25;
  
  console.log(`üí™ Calculando peso personalizado para: ${exercise.name} (categoria: ${exerciseCategory})`);
  
  // Multiplicadores base por g√™nero
  const genderMultiplier = gender === 'feminino' ? 0.65 : 1.0;
  
  // Multiplicadores por experi√™ncia
  let experienceMultiplier = 1.0;
  switch (experience) {
    case 'iniciante':
      experienceMultiplier = 0.6;
      break;
    case 'intermediario':
    case 'intermedi√°rio':
      experienceMultiplier = 0.8;
      break;
    case 'avancado':
    case 'avan√ßado':
      experienceMultiplier = 1.1;
      break;
  }
  
  // Ajuste por idade (redu√ß√£o gradual ap√≥s 40 anos)
  const ageMultiplier = age > 40 ? Math.max(0.8, 1 - (age - 40) * 0.01) : 1.0;
  
  // C√°lculos espec√≠ficos por categoria de exerc√≠cio
  let minWeight = 0;
  let maxWeight = 0;
  
  switch (exerciseCategory) {
    case 'supino':
      // 40-80% do peso corporal para supino
      minWeight = Math.round(weight * 0.4 * genderMultiplier * experienceMultiplier * ageMultiplier);
      maxWeight = Math.round(weight * 0.8 * genderMultiplier * experienceMultiplier * ageMultiplier);
      break;
      
    case 'agachamento':
      // 50-120% do peso corporal para agachamento
      minWeight = Math.round(weight * 0.5 * genderMultiplier * experienceMultiplier * ageMultiplier);
      maxWeight = Math.round(weight * 1.2 * genderMultiplier * experienceMultiplier * ageMultiplier);
      break;
      
    case 'stiff':
      // 60-100% do peso corporal para terra/stiff
      minWeight = Math.round(weight * 0.6 * genderMultiplier * experienceMultiplier * ageMultiplier);
      maxWeight = Math.round(weight * 1.0 * genderMultiplier * experienceMultiplier * ageMultiplier);
      break;
      
    case 'barra':
      // Exerc√≠cio de peso corporal ou assistido
      if (experience === 'iniciante') {
        return gender === 'feminino' ? 'Assistida ou el√°stico' : 'Assistida ou negativas';
      } else {
        const additionalWeight = Math.round(weight * 0.2 * experienceMultiplier);
        return additionalWeight > 5 ? `Peso corporal + ${additionalWeight}kg` : 'Peso corporal';
      }
      
    case 'flex√£o':
      // Flex√µes sempre peso corporal ou com varia√ß√µes
      if (experience === 'iniciante') {
        return gender === 'feminino' ? 'Joelhos ou inclinada' : 'Peso corporal';
      } else {
        const additionalWeight = Math.round(weight * 0.15 * experienceMultiplier);
        return additionalWeight > 5 ? `Peso corporal + ${additionalWeight}kg` : 'Peso corporal';
      }
      
    case 'remada':
    case 'pulldown':
      // 30-70% do peso corporal
      minWeight = Math.round(weight * 0.3 * genderMultiplier * experienceMultiplier * ageMultiplier);
      maxWeight = Math.round(weight * 0.7 * genderMultiplier * experienceMultiplier * ageMultiplier);
      break;
      
    case 'rosca':
      // 15-25% do peso corporal para b√≠ceps
      minWeight = Math.round(weight * 0.15 * genderMultiplier * experienceMultiplier * ageMultiplier);
      maxWeight = Math.round(weight * 0.25 * genderMultiplier * experienceMultiplier * ageMultiplier);
      break;
      
    case 'tr√≠ceps':
      // 20-35% do peso corporal para tr√≠ceps
      minWeight = Math.round(weight * 0.2 * genderMultiplier * experienceMultiplier * ageMultiplier);
      maxWeight = Math.round(weight * 0.35 * genderMultiplier * experienceMultiplier * ageMultiplier);
      break;
      
    case 'leg':
      // Leg press: 80-150% do peso corporal
      minWeight = Math.round(weight * 0.8 * genderMultiplier * experienceMultiplier * ageMultiplier);
      maxWeight = Math.round(weight * 1.5 * genderMultiplier * experienceMultiplier * ageMultiplier);
      break;
      
    case 'crucifixo':
      // Crucifixo: 10-20% do peso corporal
      minWeight = Math.round(weight * 0.1 * genderMultiplier * experienceMultiplier * ageMultiplier);
      maxWeight = Math.round(weight * 0.2 * genderMultiplier * experienceMultiplier * ageMultiplier);
      break;
      
    default:
      // Exerc√≠cio gen√©rico: 20-40% do peso corporal
      minWeight = Math.round(weight * 0.2 * genderMultiplier * experienceMultiplier * ageMultiplier);
      maxWeight = Math.round(weight * 0.4 * genderMultiplier * experienceMultiplier * ageMultiplier);
  }
  
  // Garantir valores m√≠nimos pr√°ticos
  minWeight = Math.max(minWeight, gender === 'feminino' ? 2 : 5);
  maxWeight = Math.max(maxWeight, minWeight + (gender === 'feminino' ? 3 : 5));
  
  // Arredondar para m√∫ltiplos de 2.5kg para ser pr√°tico na academia
  minWeight = Math.round(minWeight / 2.5) * 2.5;
  maxWeight = Math.round(maxWeight / 2.5) * 2.5;
  
  const result = `${minWeight}-${maxWeight}kg`;
  
  console.log(`‚úÖ Peso calculado para ${exercise.name}: ${result} (perfil: ${weight}kg, ${gender}, ${experience}, ${age}anos)`);
  
  return result;
};
